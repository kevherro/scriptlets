#!/bin/bash

# Create and add a new git worktree for a specific project.

# Usage function to display help.
usage() {
  local final_name=$(basename "$0")
  echo "Usage: $final_name <PROJECT_PATH> <BRANCH_NAME> <TRACKING_BRANCH_NAME>"
  echo "Example: $final_name ~/oss/myproject feature-x master"
}

# Check if exactly 3 arguments are passed.
# If not, display usage and exit.
if [ "$#" -ne 3 ]; then
  usage
  exit 1
fi

PROJECT_PATH=$1
BRANCH_NAME=$2
TRACKING_BRANCH_NAME=$3
WORKTREE_PATH="$PROJECT_PATH/worktrees/$BRANCH_NAME"

# Verify that the specified project path exists.
if [ ! -d "$PROJECT_PATH" ]; then
  echo "Error: The specified project path does not exist."
  usage
  exit 1
fi

# Verify that the worktree directory exists.
if [ ! -d "$PROJECT_PATH/worktrees" ]; then
  echo "The '$PROJECT_PATH/worktrees' sub-directory does not exist. Creating it now..."
  mkdir -p "$PROJECT_PATH/worktrees"
fi

# Verify that the branch exists.
if ! git -C "$PROJECT_PATH" rev-parse --verify "$BRANCH_NAME" > /dev/null 2>&1; then
  echo "Branch '$BRANCH_NAME' does not exist. Creating it now..."
  git -C "$PROJECT_PATH" branch "$BRANCH_NAME" "$TRACKING_BRANCH_NAME"
fi

# Attempt to add the worktree.
if git -C "$PROJECT_PATH" worktree add "$WORKTREE_PATH" "$BRANCH_NAME"; then
  echo "Worktree for '$BRANCH_NAME' added at '$WORKTREE_PATH'"
else
  echo "Failed to add worktree for '$BRANCH_NAME'."
  exit 1
fi
